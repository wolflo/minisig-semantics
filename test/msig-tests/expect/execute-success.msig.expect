<msig>
  <k>
    .
  </k>
  <status>
    MSIG_SUCCESS
  </status>
  <msig-state>
    <nonce>
      3
    </nonce>
    <domSep>
      ""
    </domSep>
    <threshold>
      2
    </threshold>
    <balance>
      11
    </balance>
    <signers>
      55 : 56 : 57 : .LstAddress
    </signers>
  </msig-state>
  <call>
    <callvalue>
      0
    </callvalue>
    <returndata>
      true
    </returndata>
    <callgas>
      17
    </callgas>
  </call>
  <log>
    <fn-log>
      ListItem ( { fn: fn_execute ( DelegateCall , 5 , 1 , 102 , "data2" , [ "sigA2" : "sigB2" : .LstSig ] ) , callvalue: 1 , callgas: 17 } )
      ListItem ( { fn: fn_execute ( Call , 5 , 1 , 101 , "data1" , [ "sigA1" : "sigB1" : .LstSig ] ) , callvalue: 10 , callgas: 17 } )
    </fn-log>
    <return-log>
      ListItem ( true )
      ListItem ( true )
    </return-log>
    <call-log>
      ListItem ( { op: DelegateCall, gas: 5, val: 1, dst: 102, data: "data2" } )
      ListItem ( { op: Call, gas: 5, val: 1, dst: 101, data: "data1" } )
    </call-log>
  </log>
  <prestate>
    .
  </prestate>
  <world>
    <ecrecover>
      {sig: "sigA1", op: Call, nonce: 1, gas: 5, val: 1, dst: 101, data: "data1"} |-> 55
      {sig: "sigA2", op: DelegateCall, nonce: 2, gas: 5, val: 1, dst: 102, data: "data2"} |-> 55
      {sig: "sigB1", op: Call, nonce: 1, gas: 5, val: 1, dst: 101, data: "data1"} |-> 56
      {sig: "sigB2", op: DelegateCall, nonce: 2, gas: 5, val: 1, dst: 102, data: "data2"} |-> 56
    </ecrecover>
    <call-success>
      .List
    </call-success>
    <codesize>
      102 |-> 100
    </codesize>
    <gas-used-pre-call>
      10
    </gas-used-pre-call>
  </world>
</msig>
